@using Microsoft.AspNetCore.Identity
@using PestKontroll.Models.Enums
@using PestKontroll.Services.Interfaces

@model PestKontroll.Models.ViewModels.DashboardViewModel

@inject UserManager<PKUser> UserManager
@inject IPKRoleService RoleService
@inject IPKTicketHistoryService HistoryService

@{
	ViewData["Title"] = "Dashboard";
	
	PKUser pkUser = await UserManager.GetUserAsync(User);
}

<!-- Styles -->
<style>
	.amDark {
		background-color: #30303d;
		color: #fff;
	}

	#chartdiv {
		width: 100%;
		height: 500px;
	}

	.active-projects {
		background-color: rgba(54, 162, 235, 0.4);
		border-color: rgba(54, 162, 235, 0.2);
		border-style: solid;
		border-width: 2px;
		border-radius: 0.25rem;
	}

	.total-tickets {
		background-color: rgba(255, 206, 86, 0.4);
		border-color: rgba(255, 206, 86, 1);
		border-style: solid;
		border-width: 2px;
		border-radius: 0.25rem;
	}

	.unassigned-tickets {
		background-color: rgba(255, 99, 132, 0.4);
		border-color: rgba(255, 99, 132, 1);
		border-style: solid;
		border-width: 2px;
		border-radius: 0.25rem;
	}

	.total-data {
		background-color: rgba(75, 192, 192, 0.4);
		border-color: rgba(75, 192, 192, 1);
		border-style: solid;
		border-width: 2px;
		border-radius: 0.25rem;
	}
</style>

@*<a href="javascript:void(0);">
	@if (pkUser.AvatarFileData != null)
	{
		<img class="media-object" src="data:image/*;base64,@Convert.ToBase64String(pkUser.AvatarFileData)" alt="" />
	}
	else
	{
		<img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px" />
	}
</a>
<br />
<strong>@pkUser.FullName</strong>
<span class="text-muted" style="font-size:x-small;">
	<strong>@Model.Company.Name</strong>
</span>*@


<div class="side-app">
	<div class="main-container container-fluid">
		<!-- ROW-1 -->
		<div class="row">
			<div class="col-sm-6 col-md-6 col-lg-6 col-xl-3">
				<div class="card bg-primary img-card box-primary-shadow">
					<div class="card-body">
						<div class="d-flex">
							<div class="text-white">
								<h2 class="mb-0 number-font">@Model.Projects.Count()</h2>
								<p class="text-white mb-0">Total Projects </p>
							</div>
							<div class="ms-auto"> <i class="fe fe-file-text text-white fs-30 me-2 mt-2"></i> </div>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
			<div class="col-sm-6 col-md-6 col-lg-6 col-xl-3">
				<div class="card bg-secondary img-card box-secondary-shadow">
					<div class="card-body">
						<div class="d-flex">
							<div class="text-white">
								<h2 class="mb-0 number-font">@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h2>
								<p class="text-white mb-0">Active Projects</p>
							</div>
							<div class="ms-auto"> <i class="fe fe-award text-white fs-30 me-2 mt-2"></i> </div>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
			<div class="col-sm-6 col-md-6 col-lg-6 col-xl-3">
				<div class="card  bg-success img-card box-success-shadow">
					<div class="card-body">
						<div class="d-flex">
							<div class="text-white">
								<h2 class="mb-0 number-font">@Model.Tickets.Count()</h2>
								<p class="text-white mb-0">Total Tickets</p>
							</div>
							<div class="ms-auto"> <i class="fe fe-tag text-white fs-30 me-2 mt-2"></i> </div>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
			<div class="col-sm-6 col-md-6 col-lg-6 col-xl-3">
				<div class="card bg-info img-card box-info-shadow">
					<div class="card-body">
						<div class="d-flex">
							<div class="text-white">
								<h2 class="mb-0 number-font">@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h2>
								<p class="text-white mb-0">Unassigned Tickets</p>
							</div>
							<div class="ms-auto"> <i class="fe fe-alert-triangle text-white fs-30 me-2 mt-2"></i> </div>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
		</div>
		<!-- ROW-1 END -->

		<!-- ROW-2 -->
		<div class="row">
			<div class="col-sm-12 col-md-12 col-lg-12 col-xl-9">
				<div class="card">
					<div class="card-header">
						<h3 class="card-title">Sales Analytics</h3>
					</div>
					<div class="card-body">
						<div class="d-flex mx-auto text-center justify-content-center mb-4">
							<div class="d-flex text-center justify-content-center me-3"><span
									class="dot-label bg-primary my-auto"></span>Total Sales</div>
							<div class="d-flex text-center justify-content-center"><span
									class="dot-label bg-secondary my-auto"></span>Total Orders</div>
						</div>
						<div class="chartjs-wrapper-demo">
							<canvas id="transactions" class="chart-dropshadow"></canvas>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
			<div class="col-sm-12 col-md-12 col-lg-12 col-xl-3">
				<div class="card overflow-hidden">
					<div class="card-body pb-0 bg-recentorder">
						<h3 class="card-title text-white">Recent Orders</h3>
						<div class="chartjs-wrapper-demo">
							<canvas id="recentorders" class="chart-dropshadow"></canvas>
						</div>
					</div>
					<div id="flotback-chart" class="flot-background"></div>
					<div class="card-body">
						<div class="d-flex mb-4 mt-3">
							<div
								class="avatar avatar-md bg-secondary-transparent text-secondary bradius me-3">
								<i class="fe fe-check"></i>
							</div>
							<div class="">
								<h6 class="mb-1 fw-semibold">Delivered Orders</h6>
								<p class="fw-normal fs-12"> <span class="text-success">3.5%</span>
									increased </p>
							</div>
							<div class=" ms-auto my-auto">
								<p class="fw-bold fs-20"> 1,768 </p>
							</div>
						</div>
						<div class="d-flex">
							<div class="avatar  avatar-md bg-pink-transparent text-pink bradius me-3">
								<i class="fe fe-x"></i>
							</div>
							<div class="">
								<h6 class="mb-1 fw-semibold">Cancelled Orders</h6>
								<p class="fw-normal fs-12"> <span class="text-success">1.2%</span>
									increased </p>
							</div>
							<div class=" ms-auto my-auto">
								<p class="fw-bold fs-20 mb-0"> 3,675 </p>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- COL END -->
		</div>
		<!-- ROW-2 END -->

		<!-- ROW-3 -->
		@{
			List<TicketHistory> histories = (await HistoryService.GetCompanyTicketsHistoriesAsync(pkUser.CompanyId)).OrderByDescending(h => h.Created).ToList();
		}
		<div class="row">
			<div class="col-xl-4 col-md-12">
				<div class="card">
					<div class="card-header">
						<h4 class="card-title fw-semibold">Daily Activity</h4>
					</div>
					<div class="card-body pb-0">
						<ul class="task-list">
							@foreach (TicketHistory history in histories)
							{
								<li class="d-sm-flex">
									<div>
										<i class="task-icon bg-primary"></i>
										<h6 class="fw-semibold">@history.Description<span
												class="text-muted fs-11 mx-2 fw-normal">@history.Created.ToString("dd MMM yyyy")</span>
										</h6>
										@if (history.Description.Contains("New Ticket Created"))
                                        {
											<p class="text-muted fs-12">@history.User.FullName added ticket <a href="javascript:void(0)"
												class="fw-semibold"> @history.Ticket.Title</a></p>
                                        }
                                        else if (history.Property.Equals("TicketComment") || history.Property.Equals("TicketAttachment"))
                                        {
											<p class="text-muted fs-12">@history.User.FullName added @history.Property on<a href="javascript:void(0)"
												class="fw-semibold"> @history.Ticket.Title</a></p>
                                        }
                                        else
                                        {
                                            <p class="text-muted fs-12">@history.User.FullName edited @history.Property on<a href="javascript:void(0)"
												class="fw-semibold"> @history.Ticket.Title</a></p>
                                        }
									</div>
									<div class="ms-auto d-md-flex">
										<a href="javascript:void(0)" class="text-muted me-2" data-bs-toggle="tooltip"
											data-bs-placement="top" title="Edit" aria-label="Edit"><span
												class="fe fe-edit"></span></a>
										<a href="javascript:void(0)" class="text-muted"><span
												class="fe fe-trash-2"></span></a>
									</div>
								</li>
							}
						</ul>
					</div>
				</div>
			</div>
			<div class="col-xl-8 col-md-12">
			<div class="card">
				<div class="card-header">
					<h3 class="card-title mb-0">Projects</h3>
				</div>
				<div class="card-body pt-4">
					<div class="grid-margin">
						<div class="">
							<div class="panel panel-primary">
								<div class="panel-body tabs-menu-body border-0 pt-0">
									<div class="tab-content">
										<div class="tab-pane active" id="tab5">
											<div class="table-responsive">
												<table id="data-table"
													class="table table-bordered text-nowrap mb-0">
													<thead class="border-top">
														<tr>
															<th
																class="bg-transparent border-bottom-0">
																Project Name</th>
															<th
																class="bg-transparent border-bottom-0">
																Start Date</th>
															<th
																class="bg-transparent border-bottom-0">
																End Date</th>
															<th class="bg-transparent border-bottom-0"
																style="width: 10%;">Priority</th>
															<th class="bg-transparent border-bottom-0"
																style="width: 5%;">Action</th>
														</tr>
													</thead>
													<tbody>
														@foreach (var project in Model.Projects.OrderByDescending(t => t.EndDate))
														{
															<tr class="border-bottom">
																<td>
																	<div class="d-flex">
																		<span class="avatar bradius"
																			style="background-image: url(../assets/images/orders/10.jpg)"></span>
																		<div
																			class="ms-3 mt-0 mt-sm-2 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@project.Name</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="d-flex">
																		<div
																			class="mt-0 mt-sm-3 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@project.StartDate.ToString("dd MMM yyyy")</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="d-flex">
																		<div
																			class="mt-0 mt-sm-3 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@project.EndDate.ToString("dd MMM yyyy")</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="mt-sm-1 d-block">
																		@if (project.ProjectPriority?.Name == "Low")
																		{
																			<span class="badge bg-success-transparent rounded-pill text-success p-2 px-3">
																				@project.ProjectPriority?.Name
																			</span>
																		}
																		else if(project.ProjectPriority?.Name == "Medium")
																		{
																			<span class="badge bg-primary-transparent rounded-pill text-primary p-2 px-3">
																				@project.ProjectPriority?.Name
																			</span>
																		}
																		else if(project.ProjectPriority?.Name == "High")
																		{
																			<span class="badge bg-warning-transparent rounded-pill text-warning p-2 px-3">
																				@project.ProjectPriority?.Name
																			</span>
																		}
																		else if (project.ProjectPriority?.Name == "Urgent")
																		{
																			<span class="badge bg-danger-transparent rounded-pill text-danger p-2 px-3">
																				@project.ProjectPriority?.Name
																			</span>
																		}
																	</div>
																</td>
																<td>
																	<div class="g-2">
																		<a class="btn text-primary btn-sm"
																			data-bs-toggle="tooltip"
																			data-bs-original-title="Details"
																			asp-controller="Projects"
																			asp-action="Details"
																			asp-route-id="@project.id"><span
																				class="fe fe-edit fs-14"></span></a>
																	</div>
																</td>
															</tr>
														}
													</tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	</div>
	<div class="mt-3 ">
		<div class="row">
			@* Tickets Table *@
			<div class="col-12">
			<div class="card">
				<div class="card-header">
					<h3 class="card-title mb-0">Tickets</h3>
				</div>
				<div class="card-body pt-4">
					<div class="grid-margin">
						<div class="">
							<div class="panel panel-primary">
								<div class="panel-body tabs-menu-body border-0 pt-0">
									<div class="tab-content">
										<div class="tab-pane active" id="tab5">
											<div class="table-responsive">
												<table id="data-table"
													class="table table-bordered text-nowrap mb-0">
													<thead class="border-top">
														<tr>
															<th
																class="bg-transparent border-bottom-0">
																Ticket Title</th>
															<th
																class="bg-transparent border-bottom-0">
																Developer</th>
															<th
																class="bg-transparent border-bottom-0">
																Status</th>
															<th
																class="bg-transparent border-bottom-0">
																Date</th>
															<th class="bg-transparent border-bottom-0"
																style="width: 10%;">Priority</th>
															<th class="bg-transparent border-bottom-0"
																style="width: 5%;">Action</th>
														</tr>
													</thead>
													<tbody>
														@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
														{
															<tr class="border-bottom">
																<td>
																	<div class="d-flex">
																		<span class="avatar bradius"
																			style="background-image: url(../assets/images/orders/10.jpg)"></span>
																		<div
																			class="ms-3 mt-0 mt-sm-2 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@ticket.Title</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="d-flex">
																		<div
																			class="mt-0 mt-sm-3 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@if (ticket.DeveloperUserId != null)
																				{
																					@ticket.DeveloperUser?.FullName
																				}
																				else
																				{
																					<span class="badge bg-warning-transparent rounded-pill text-warning p-2 px-3">
																						Unassigned
																					</span>
																				}
																				</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="d-flex">
																		<div
																			class="mt-0 mt-sm-3 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																					@if (ticket.TicketStatus.Name == "New")
																					{
																						<span class="badge bg-success-transparent rounded-pill text-success p-2 px-3">
																							@ticket.TicketStatus.Name
																						</span>
																					}
																					else if(ticket.TicketStatus.Name == "Development")
																					{
																						<span class="badge bg-primary-transparent rounded-pill text-primary p-2 px-3">
																							@ticket.TicketStatus.Name
																						</span>
																					}
																					else if(ticket.TicketStatus.Name == "Testing")
																					{
																						<span class="badge bg-warning-transparent rounded-pill text-warning p-2 px-3">
																							@ticket.TicketStatus.Name
																						</span>
																					}
																					else if (ticket.TicketStatus.Name == "Resolved")
																					{
																						<span class="badge bg-danger-transparent rounded-pill text-danger p-2 px-3">
																							@ticket.TicketStatus.Name
																						</span>
																					}
																				</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="mt-sm-1 d-block">
																		@if (ticket.TicketPriority.Name == "Low")
																		{
																			<span class="badge bg-success-transparent rounded-pill text-success p-2 px-3">
																				@ticket.TicketPriority.Name
																			</span>
																		}
																		else if(ticket.TicketPriority.Name == "Medium")
																		{
																			<span class="badge bg-primary-transparent rounded-pill text-primary p-2 px-3">
																				@ticket.TicketPriority.Name
																			</span>
																		}
																		else if(ticket.TicketPriority.Name == "High")
																		{
																			<span class="badge bg-warning-transparent rounded-pill text-warning p-2 px-3">
																				@ticket.TicketPriority.Name
																			</span>
																		}
																		else if (ticket.TicketPriority.Name == "Urgent")
																		{
																			<span class="badge bg-danger-transparent rounded-pill text-danger p-2 px-3">
																				@ticket.TicketPriority.Name
																			</span>
																		}
																	</div>
																</td>
																<td>
																	<div class="d-flex">
																		<div
																			class="mt-0 mt-sm-3 d-block">
																			<h6
																				class="mb-0 fs-14 fw-semibold">
																				@ticket.Created.ToString("dd MMM yyyy")
																				</h6>
																		</div>
																	</div>
																</td>
																<td>
																	<div class="g-2">
																		<a class="btn text-primary btn-sm"
																			data-bs-toggle="tooltip"
																			data-bs-original-title="Details"
																			asp-controller="Tickets"
																			asp-action="Details"
																			asp-route-id="@ticket.Id"><span
																				class="fe fe-edit fs-14"></span></a>
																	</div>
																</td>
															</tr>
														}
													</tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
				</div>
			</div>
			@*<div class="col-md-2 ">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Members</h2>
							<hr />
						</div>
						<div class="card-body" style="overflow-y:auto;height:600px;background-color:antiquewhite">
							<ul class="right_chat list-unstyled mb-0">
								@foreach (PKUser member in Model.Members)
								{
									<li class="">
										<a href="">
											<div class="media">
												@if (member.AvatarFileData != null)
												{
													<img class="rounded-circle" style="width:30px;height:30px;" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" alt="" />
												}
												else
												{
													<img class="rounded-circle" style="width:30px;height:30px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
												}

											</div>
										</a>
										<div class="">
											<span class="date" style="font-weight:bold">@member.FullName</span>
											<h6>@((await RoleService.GetUserRolesAsync(member)).FirstOrDefault())</h6>
										</div>
										<hr />
									</li>
								}
							</ul>
						</div>
					</div>
				</div>
			</div>*@
		</div>
	</div>
</div>
@section scripts{
	<!-- *** Begin Chart JS Pie/Donut *** -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
	<script>
		var projectsTicketsData = [];
		var projectsTicketsLabels = [];
	</script>
	@foreach (var project in Model.Projects)
	{
		<script>
			projectsTicketsData.push(@project.Tickets.Count());
			projectsTicketsLabels.push('@project.Name');
		</script>
	}
<script>

	var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
	var donutData = {
			labels: [
				'@nameof(PKTicketStatus.New)',
				'@nameof(PKTicketStatus.Development)',
				'@nameof(PKTicketStatus.Testing)',
				'@nameof(PKTicketStatus.Resolved)'
		],
		datasets: [
			{
				data: [
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(PKTicketStatus.New)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(PKTicketStatus.Development)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(PKTicketStatus.Testing)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(PKTicketStatus.Resolved)).Count()
				],
				backgroundColor: [
					'rgba(255, 99, 132, 0.2)',
					'rgba(255, 206, 86, 0.2)',
					'rgba(54, 162, 235, 0.2)',
					'rgba(75, 192, 192, 0.2)'
				],
				borderColor: [
					'rgba(255, 99, 132, 1)',
					'rgba(255, 206, 86, 1)',
					'rgba(54, 162, 235, 1)',
					'rgba(75, 192, 192, 1)'
				]
			}
		]
	};

		var donutOptions = {
			maintainAspectRatio: false,
			responsive: true,
		};
		//Create pie or douhnut chart
		// You can switch between pie and douhnut using the method below.
		new Chart(donutChartCanvas, {
			type: 'doughnut',
			data: donutData,
			options: donutOptions
		});

		//Project Tickets Count
		var projectTicketsChartCanvas = $('#projectTicketsCount').get(0).getContext('2d');
		var projectTicketsData = {
			labels: projectsTicketsLabels,
			datasets: [
				{
					data: projectsTicketsData,
					backgroundColor: [
						'rgba(255, 206, 86, 0.2)',
						'rgba(54, 162, 235, 0.2)',
						'rgba(75, 192, 192, 0.2)'
					],
					borderColor: [
						'rgba(255, 206, 86, 1)',
						'rgba(54, 162, 235, 1)',
						'rgba(75, 192, 192, 1)'
					]
				}
			]
		};

		var projectTicketsOptions = {
			maintainAspectRatio: false,
			responsive: true,
		};
		//Create pie or douhnut chart
		// You can switch between pie and douhnut using the method below.
		new Chart(projectTicketsChartCanvas, {
			type: 'doughnut',
			data: projectTicketsData,
			options: projectTicketsOptions
		});

		//Projects By Priority
		var projectsByPriChartCanvas = $('#projectsByPri').get(0).getContext('2d');
		var projectsByPriData = {
			labels: [
				'@nameof(PKProjectPriority.Low)',
				'@nameof(PKProjectPriority.Medium)',
				'@nameof(PKProjectPriority.High)',
				'@nameof(PKProjectPriority.Urgent)'
			],
			datasets: [
				{
					data: [
							@Model.Projects.Where(p=> p.ProjectPriority.Name == nameof(PKProjectPriority.Low)).Count(),
							@Model.Projects.Where(p=> p.ProjectPriority.Name == nameof(PKProjectPriority.Medium)).Count(),
							@Model.Projects.Where(p=> p.ProjectPriority.Name == nameof(PKProjectPriority.High)).Count(),
							@Model.Projects.Where(p=> p.ProjectPriority.Name == nameof(PKProjectPriority.Urgent)).Count(),
					],
					backgroundColor: [
						'rgba(75, 192, 192, 0.2)',
						'rgba(54, 162, 235, 0.2)',
						'rgba(255, 206, 86, 0.2)',
						'rgba(255, 99, 132, 0.2)',
					],
					borderColor: [
						'rgba(75, 192, 192, 1)',
						'rgba(54, 162, 235, 1)',
						'rgba(255, 206, 86, 1)',
						'rgba(255, 99, 132, 1)',
					]
				}
			]
		};

		var projectsByPriOptions = {
			maintainAspectRatio: false,
			responsive: true,
		};
		//Create pie or douhnut chart
		// You can switch between pie and douhnut using the method below.
		new Chart(projectsByPriChartCanvas, {
			type: 'pie',
			data: projectsByPriData,
			options: projectsByPriOptions
		});

		//Ticket By Priority
		var ticketPriorityChartCanvas = $('#ticketPriority').get(0).getContext('2d');
		var ticketPriorityData = {
			labels: [
				'@nameof(PKTicketPriority.Low)',
				'@nameof(PKTicketPriority.Medium)',
				'@nameof(PKTicketPriority.High)',
				'@nameof(PKTicketPriority.Urgent)'
			],
			datasets: [
				{
					data: [
							@Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(PKTicketPriority.Low)).Count(),
							@Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(PKTicketPriority.Medium)).Count(),
							@Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(PKTicketPriority.High)).Count(),
							@Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(PKTicketPriority.Urgent)).Count(),
					],
					backgroundColor: [
						'rgba(75, 192, 192, 0.2)',
						'rgba(54, 162, 235, 0.2)',
						'rgba(255, 206, 86, 0.2)',
						'rgba(255, 99, 132, 0.2)',
					],
					borderColor: [
						'rgba(75, 192, 192, 1)',
						'rgba(54, 162, 235, 1)',
						'rgba(255, 206, 86, 1)',
						'rgba(255, 99, 132, 1)',
					]
				}
			]
		};

		var ticketPriorityOptions = {
			maintainAspectRatio: false,
			responsive: true,
		};
		//Create pie or douhnut chart
		// You can switch between pie and douhnut using the method below.
		new Chart(ticketPriorityChartCanvas, {
			type: 'pie',
			data: ticketPriorityData,
			options: ticketPriorityOptions
		});
</script>
<!-- *** End Chart JS Donut *** -->

<!--  Plotly Charts  -->
<!-- Load plotly.js into the DOM -->
<script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
@*<script>
	$.ajax({
		type: "POST",
		url: "/Home/PlotlyBarChart",
		data: '{}',
		contentType: "application/json; charset=utf-8",
		dataType: "json",
		success: function (result) {
			var data = result;

			var layout = {barmode: 'group'};

			Plotly.newPlot('plotlyChart', data, layout);
			},
			failure: function (result) {
				alert(result.d);
			},
			error: function (result) {
				alert(result.d);
			}
		});
</script>
*@}