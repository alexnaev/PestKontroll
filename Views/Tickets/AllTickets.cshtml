@model IEnumerable<PestKontroll.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using PestKontroll.Services.Interfaces
@using PestKontroll.Models.Enums

@inject UserManager<PKUser> UserManager
@inject IPKProjectService ProjectService

@{
    ViewData["Title"] = "All Tickets";
    PKUser pkUser = await UserManager.GetUserAsync(User);
}

<h1>All Tickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (User.IsInRole(nameof(Roles.Admin)) || item.DeveloperUserId == pkUser.Id || item.OwnerUserId == pkUser.Id || await ProjectService.IsAssignedProjectManagerAsync(pkUser.Id, item.ProjectId))
                {
                    <span>|</span>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>                    
                }

                @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(pkUser.Id, item.ProjectId))
                {
                    <span>|</span>
                    if (!item.Archived)
                    {
                        <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                    else
                    {
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                }
                </td>
        </tr>
}
    </tbody>
</table>
